package api.endpoints;

import io.restassured.http.ContentType;
import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;
import com.github.scribejava.core.model.Response;

// UserEndpoints.java file
// This class is created to implement methods for CRUD operations 
//(create , read, update , delete) requests for the user API
// and these methods will be called from Test Cases classes later to perform validations on them
// payload is the request body 

public class UserEndpoints {
	
	// create user 
	public static Response createUser(User payload) 
	{
		Response response = given()
		    .contentType(ContentType.JSON) // one header 
		    .accept(ContentType.JSON) // second header 
		    .body(payload) // it is the request body which we will send as part of the request
		.when()
		     .post(Routes.post_url); // we get it from Routes class
		
		return response;
	}
	
	// read user
	public static Response readUser(String userName) 
	{
		Response response = given()
		    .pathParam("username", userName)
		    
		.when()
		     .get(Routes.get_url); // we get it from Routes class
		
		return response;
	}
	
	// update user
	public static Response updateUser(User payload, String userName) 
	{
		 Response response = given()
		     .contentType(ContentType.JSON)
		     .accept(ContentType.JSON) 
		     .pathParam("username", userName)
		     .body(payload)
		.when()
		     .put(Routes.update_url); // we get it from Routes class
		
		return response;
	}
	
	// delete  user
	public static Response deleteUser(String userName) 
	{
		 Response response = given()
		    .pathParam("username", userName)
		   
		.when()
		     .delete(Routes.delete_url); // we get it from Routes class
		
	}

}
